version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: demonstrate_orders_test
    ports:
      - "5434:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready -U postgres -d demonstrate_orders_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats-streaming:
    image: nats-streaming:0.22.0
    ports:
      - "4223:4223"
      - "8222:8222"
    command: ["-p", "4223", "-m", "8222"]

  app:
    build: .
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=demonstrate_orders_test
      - DB_HOST=db
      - DB_PORT=5432
      - NATS_CLUSTER_ID=test-cluster
      - NATS_CLIENT_ID=receiver-123
      - NATS_URL=nats://nats-streaming:4223
      - WAIT_HOSTS=db:5432, nats-streaming:4223
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - DATABASE_URL=postgres://postgres:password@db:5432/demonstrate_orders_test?sslmode=disable
    depends_on:
      - db
      - nats-streaming
    command: >
      sh -c "/wait &&
      ./bin/goose -dir db/migrations postgres postgres://postgres:password@db:5432/demonstrate_orders_test?sslmode=disable up &&
      ./main
      go test ./tests
      ./main"
    ports:
      - "8080:8080"

  tests:
    build: .
    depends_on:
      - app
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=demonstrate_orders_test
      - DB_HOST=db
      - DB_PORT=5432
      - NATS_CLUSTER_ID=test-cluster
      - NATS_CLIENT_ID=receiver-123
      - NATS_URL=nats://nats-streaming:4223
      - WAIT_HOSTS=app:8080
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    command: >
      sh -c "/wait &&
      go test ./tests"
